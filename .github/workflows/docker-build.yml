name: docker-build

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  amd64-debug:
    runs-on: "ubuntu-latest"
    permissions:
      contents: write 
      packages: write 
    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v2"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # list of Docker images to use as base name for tags
          # generate Docker tags based on the following events/attributes
        tags: |
          type=sha,prefix={{branch}}-
          type=raw,value=mytag-{{branch}}-{{sha}}
        #   type=schedule
        #   type=ref,event=branch
        #   type=ref,event=pr
        #   type=semver,pattern={{version}}
        #   type=semver,pattern={{major}}.{{minor}}.{{patch}}
        #   type=semver,pattern={{major}}.{{minor}}
        #   type=semver,pattern={{major}}
        #   type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}-debug
          labels: ${{ steps.meta.outputs.labels }}-debug
          file: docker/debug.Dockerfile
  amd64:
    runs-on: "ubuntu-latest"
    permissions:
      contents: write 
      packages: write 
    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v2"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # # generate Docker tags based on the following events/attributes
          tags: |
            type=sha,prefix={{branch}}-
            type=raw,value=mytag-{{branch}}-{{sha}}
        
        #   type=schedule
        #   type=ref,event=branch
        #   type=ref,event=pr
        #   type=semver,pattern={{version}}
        #   type=semver,pattern={{major}}.{{minor}}.{{patch}}
        #   type=semver,pattern={{major}}.{{minor}}
        #   type=semver,pattern={{major}}
        #   type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # tags: ghcr.io/jbowen93/evmos:gh-action
          file: docker/Dockerfile
  arm64-debug:
    runs-on: "ubuntu-latest"
    permissions:
      contents: write 
      packages: write 
    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v2"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha,prefix={{branch}}-
          type=raw,value=mytag-{{branch}}-{{sha}}
         
        # generate Docker tags based on the following events/attributes
        # tags: |
        #   type=schedule
        #   type=ref,event=branch
        #   type=ref,event=pr
        #   type=semver,pattern={{version}}
        #   type=semver,pattern={{major}}.{{minor}}.{{patch}}
        #   type=semver,pattern={{major}}.{{minor}}
        #   type=semver,pattern={{major}}
        #   type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}-debug
          labels: ${{ steps.meta.outputs.labels }}-debug
          file: docker/debug.Dockerfile
  arm64:
    runs-on: "ubuntu-latest"
    permissions:
      contents: write 
      packages: write 
    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v2"
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
        tags: |
          type=sha,prefix={{branch}}-
          type=raw,value=mytag-{{branch}}-{{sha}}
        #   type=schedule
        #   type=ref,event=branch
        #   type=ref,event=pr
        #   type=semver,pattern={{version}}
        #   type=semver,pattern={{major}}.{{minor}}.{{patch}}
        #   type=semver,pattern={{major}}.{{minor}}
        #   type=semver,pattern={{major}}
        #   type=sha
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: docker/Dockerfile